提前准备
##JAVA烤面筋
1. TCP 和 UDP 区别
TCP	UDP
面向连接	无连接
可靠	不可靠
无差别，不丢失，不重复	最大交付，不保证可靠交付
面向字节流	面向报文
1对1	1 对 多
首部20字节	首部 8 字节

2. 应用层的哪些协议是由 TCP 支持的
TELNET、HTTP、FTP

3. HTTP 和 HTTPs 区别
--端口、ssl、证书

4. 网页输入网址后发生了什么
--dns域名解析、tcp握手、发http请求、相应返回、关闭tcp
--浏览器解析html、加载js

5. DNS 基于 TCP 还是 UDP
DNS同时占用UDP和TCP的53端口，进行区域传送时使用TCP协议，域名解析时使用UDP协议；

6. 客户端主动断开连接， 中间的状态变化
记不住

7. 进程和线程的区别
--进程包括线程，线程可以内存共享

8. 线程的状态转换
--新增、可运行、运行、阻塞、销毁

9. 数据库索引

10. 几千万数据的表扩充新的字段如何处理
需要新建表再迁移，直接修改会锁表，导致线上业务卡主

11、 几千万数据的表如何分页
--通过主键优化，只能上下翻页
--使用elasticsearch搜索引擎

12. 海量数据如何排序
--切分，再多路归并

13. Redis 有哪几种数据结构， 底层是如何实现的
--string，内部由一个字符数组实现，不够用会加倍
--list，类似java的双向linkedlist
--hash，类似hashmap
--set，类似hashset
--zset(有序列表)，底层是跳跃链表(多级索引)

14. Redis key 和 value 的大小限制
一个String类型的value最大可以存储512M

15. SQL 注入了解吗 说一下

16. 排序算法知道哪些
冒选插希快归堆

17. 归并排序适用于那种情况， 时间复杂度
--数据量大排序稳定的场景，O(nlogn)

18. 快排时间复杂度多少？ 最坏情况， 时间复杂度？
--最优情况:每一次的flag刚好都可以平分整个数组，此时的时间复杂度为O(nlogn)
--最坏情况:每一次的flag刚好都是最大或者最小的数，此时的时间复杂度为O(n2)
--平均情况:经过推到平均情况为O(nlogn)

19. 如果一个服务端要求只能用快排， 但恶意用户就是输入快排最坏情况的数据让其排序，
导致服务端负载过大， 如何解决
--求序列中值，选取中值作为主元素

20. 如何实现 15 分钟内订单未付款则自动取消订单的功能？
-- 数据库轮询
-- 延时队列delayqueue


21. Linux 如何实现定时任务
crontab

22. 熟悉的 Linux 指令

23. &&和&的差别

##
1. 堆的插入和删除操作， 判断单链表是否成环， 介绍一下跳表、 红黑树
--. 红黑树比avl(平衡二叉树)插入效率更高
--. 快慢指针法，如果两个指针相遇就能确定链表成环


2. spring bean生命周期
--、 初始化->注入->一系列bean接口->bean不被调用则移除->如果bean实现了disposablebean接口，则调用destory方法。








